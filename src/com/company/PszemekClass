package com.company;

import javax.tools.JavaCompiler;
import javax.tools.JavaFileObject;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class PszemekClass {

    static interface Doer {
        void doSth() throws InvocationTargetException, IllegalAccessException;
    }

    static void compile(String name) throws IOException {

        List<File> names = new ArrayList<>();
        names.add(new File(name));

        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
        StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null);

        Iterable<? extends JavaFileObject> compilationUnits1 =
                fileManager.getJavaFileObjectsFromFiles(names);
        compiler.getTask(null, fileManager, null, null, null, compilationUnits1).call();

        fileManager.close();
    }

    public static void main(String[] args) throws IOException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException, InstantiationException, IllegalAccessException {
        String testA = "package com.company.tmp; public class Test { public void a() { System.out.println(\"a\"); } }";
        Files.write(Paths.get("C:\\Users\\Elka\\IdeaProjects\\ClassLoaderHello\\src\\com\\company\\tmp\\Test.java"),testA.getBytes());
//        Files.write(Paths.get("C:\\Users\\Elka\\IdeaProjects\\ClassLoaderHello\\out\\production\\ClassLoaderHello\\com\\company\\tmp\\Test.java"),testA.getBytes());
        compile("C:\\Users\\Elka\\IdeaProjects\\ClassLoaderHello\\src\\com\\company\\tmp\\Test.java");
        Doer doer1 = run("C:\\Users\\Elka\\IdeaProjects\\ClassLoaderHello\\src\\", "com.company.tmp.Test", "a");

        String testA2 = "package com.company.tmp; public class Test { public void a() { System.out.println(\"b\"); } }";
        Files.write(Paths.get("C:\\Users\\Elka\\IdeaProjects\\ClassLoaderHello\\src\\com\\company\\tmp\\Test.java"),testA2.getBytes());
        compile("C:\\Users\\Elka\\IdeaProjects\\ClassLoaderHello\\src\\com\\company\\tmp\\Test.java");
        Doer doer2 = run("C:\\Users\\Elka\\IdeaProjects\\ClassLoaderHello\\src\\", "com.company.tmp.Test","a");
        doer1.doSth();
        doer2.doSth();
    }

    private static Doer run(String classPath, String className, String methodName) throws MalformedURLException, ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException {
        URL[] urls = {new URL("file:"+classPath)};
        final URLClassLoader urlClassLoader = new URLClassLoader(urls);
        Class<?> aClass = urlClassLoader.loadClass(className);
        final Method method = aClass.getMethod(methodName);
        final Object o = aClass.newInstance();
        Doer doer = new Doer() {
            @Override
            public void doSth() throws InvocationTargetException, IllegalAccessException {
                method.invoke(o);
            }
        };
        doer.doSth();
        return doer;
    }

}
